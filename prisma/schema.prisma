// -----------------------------
// Prisma Generator & Datasource
// -----------------------------
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// -----------------------------
// Models
// -----------------------------

model User {
  id        Int      @id @default(autoincrement())
  username  String?
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  sales Sale[]
}

// --------------------------------------
// Dealer: Has pricing, can appear in sales
// --------------------------------------
model Dealer {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  phone     String?
  price     Float    @default(0.0) // ✅ Dealer's default unit price
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  sales Sale[] // ✅ One dealer can appear in multiple sales
}

// --------------------------------------
// Inventory: Pure stock table
// --------------------------------------
model Inventory {
  id           Int      @id @default(autoincrement())
  serialNumber String   @unique
  simNumber    String   @unique
  model        String
  quantity     Int      @default(1)
  dateAdded    DateTime @default(now())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  sales Sale[]
}

// --------------------------------------
// Sale: Connects inventory, dealer (optional), and user
// --------------------------------------
model Sale {
  id              Int      @id @default(autoincrement())
  productId       Int
  userId          Int
  dealerId        Int? // ✅ Optional – null if direct sale
  quantity        Int
  totalPrice      Float
  negotiatedPrice Float? // ✅ Optional – overrides dealer.price or product price
  serialNumber    String
  simNumber       String
  isDirectSale    Boolean  @default(false)
  createdAt       DateTime @default(now())

  // ✅ Relationships
  product Inventory @relation(fields: [productId], references: [id])
  user    User      @relation(fields: [userId], references: [id])
  dealer  Dealer?   @relation(fields: [dealerId], references: [id])
}
